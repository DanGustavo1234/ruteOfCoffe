# Generated by Django 4.1.3 on 2022-12-02 22:27

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=150, unique=True)),
                ('tipo_documento', models.CharField(choices=[('cedula', 'Cedula'), ('pasaporte', 'Pasaporte')], max_length=20, verbose_name='Tipo de Documento')),
                ('num_documento', models.CharField(max_length=13, verbose_name='Número de Documento')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=100, verbose_name='Apellido')),
                ('telefono', models.CharField(max_length=13, verbose_name='Teléfono')),
                ('direccion', models.CharField(max_length=200, verbose_name='Dirección')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('pais_origen', models.CharField(max_length=200, verbose_name='País de origen')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='static\\img\\emprendedores', verbose_name='Foto de Perfil')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, choices=[('Hospedaje y Hosterias', 'Hospedaje y Hosterias'), ('Gastronomia', 'Gastronomia'), ('Servicios y Spots Turisticos', 'Servicios y Spots Turisticos'), ('Productos ', 'Productos')], max_length=100, null=True, verbose_name='Nombre de la Categoría')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='static\\img\\cat', verbose_name='Foto de la Categoría')),
            ],
        ),
        migrations.CreateModel(
            name='Emprendimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_emprendimiento', models.CharField(max_length=200, verbose_name='Nombre del Emprendimiento')),
                ('direccion', models.CharField(max_length=200, verbose_name='Dirección')),
                ('telefono', models.CharField(max_length=13, verbose_name='Teléfono')),
                ('descripcion', models.TextField()),
                ('horario_apertura', models.DateTimeField()),
                ('horario_cierre', models.DateTimeField()),
                ('altitud', models.CharField(max_length=20, verbose_name='Altitud')),
                ('latitud', models.CharField(max_length=20, verbose_name='Latitud')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='static\\img\\empren', verbose_name='Logo')),
                ('video', models.URLField(blank=True, null=True, verbose_name='video promocional')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('tipo_emprendimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.categoria')),
            ],
            options={
                'verbose_name': 'Emprendimiento',
                'verbose_name_plural': 'Emprendimientos',
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_producto', models.CharField(max_length=100, verbose_name='Nombre del Producto')),
                ('descripcion_producto', models.TextField(blank=True, null=True, verbose_name='Descripción del Producto')),
                ('precio', models.IntegerField(blank=True, null=True, verbose_name='Precio del Producto')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='static/img/fotosReserva', verbose_name='Logo')),
                ('emprendimiento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='projects.emprendimiento')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
            },
        ),
        migrations.CreateModel(
            name='Adminstrador',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('fecha_inicio', models.DateTimeField()),
                ('fecha_actualizacion', models.DateTimeField()),
                ('estado', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Administrador',
                'verbose_name_plural': 'Administradores',
            },
            bases=('projects.persona',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('projects.persona',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('producto_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projects.producto')),
                ('fecha', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
            },
            bases=('projects.producto',),
        ),
        migrations.CreateModel(
            name='Video_imagen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iid', models.IntegerField(blank=True, default=0, null=True)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='static/img/fotosSlider', verbose_name='Logo')),
                ('emprendimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.emprendimiento')),
            ],
            options={
                'verbose_name': 'Video e Imagenes',
                'verbose_name_plural': 'Videos e Imagenes',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntaje', models.IntegerField(blank=True, null=True, verbose_name='Puntaje')),
                ('comentario', models.TextField(blank=True, null=True, verbose_name='Comentario')),
                ('emprendimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.emprendimiento')),
            ],
            options={
                'verbose_name': 'Score',
                'verbose_name_plural': 'Scores',
            },
        ),
        migrations.CreateModel(
            name='Reserva2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.IntegerField(blank=True, null=True, verbose_name='Cantidad')),
                ('fecha', models.DateTimeField(blank=True, null=True)),
                ('nombre_producto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.producto')),
            ],
            options={
                'verbose_name': 'Reserva2',
                'verbose_name_plural': 'Reservas2',
            },
        ),
        migrations.CreateModel(
            name='Emprendedor',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('emprendimientos', models.OneToOneField(blank=True, default=1, on_delete=django.db.models.deletion.CASCADE, to='projects.emprendimiento')),
            ],
            options={
                'verbose_name': 'Personas que emprenden',
                'verbose_name_plural': 'Emprendedores(personas)',
            },
            bases=('projects.persona',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Compra',
            fields=[
                ('producto_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='projects.producto')),
                ('fecha_compra', models.DateTimeField()),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.cliente')),
            ],
            options={
                'verbose_name': 'Compra',
                'verbose_name_plural': 'Compras',
            },
            bases=('projects.producto',),
        ),
    ]
